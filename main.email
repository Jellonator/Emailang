!bf;

!<values@bf> {
	"^init$" {
		# Note that these are all still strings
		data = ("0","0","0","0","0","0","0","0"); # 8
		data = @data + @data; # 16
		data = @data + @data; # 32
		data = @data + @data; # 64
		data = @data + @data; # 128
		data = @data + @data; # 256
	}
	"^next$" {
		data = @data[-1] + @data[:-1];
		(@content) > @sender;
	}
	"^prev$" {
		data = @data[1:] + @data[0];
		(@content) > @sender;
	}
	"^get$" {
		return = (@content, @sender);
		(cmp, cmp_ret, @data[0], "0") > <cmp@std.com>;
	}
	"^get_ret$" {
		(@return[0], @content) > @return[1];
	}
	"^add$" {
		return = (@content, @sender);
		(add, add_ret, @data[0]) + @attachments > <math@std.com>;
	}
	"^add_ret$" {
		data = @content + @data[1:];
		@return[0] > @return[1];
	}

};
"init" > <values@bf>;

!<parser@bf> {
	"^input$" {
		code = (,);
		(iterate, input_char) +
			@content
			|chars
			|(filter, "[\+-><\[\]\.,]")
			+ ("!",)
			> <loop@std.com>;
		pos = "0";
	}
	"^input_char$" {
		(print, @content) > <io@std.com>;
		code = @code + @content;
	}
	"^start$" {
		pos = "0";
		loop_begin > @self;
	}
	"^loop_begin$" {
		ismatch = false;
		char = @code[@pos];
		if   @char|(filter, "\+") {
			(print, add) > <io@std.com>;

		} elif @char|(filter,  "-") {
			(print, sub) > <io@std.com>;

		} elif @char|(filter,  ">") {
			(print, next) > <io@std.com>;

		} elif @char|(filter,  "<") {
			(print, prev) > <io@std.com>;

		} elif @char|(filter, "\[") {
			(print, loop_begin) > <io@std.com>;

		} elif @char|(filter, "\]") {
			(print, loop_end) > <io@std.com>;

		} elif @char|(filter, "\.") {
			(print, print) > <io@std.com>; 

		} elif @char|(filter,  ",") {
			(print, input) > <io@std.com>;

		} elif @char|(filter,  "!") {
			(print, NONE, @char) > <io@std.com>;
			stop = true;
		};

		loop_end > @self;
	}
	"^loop_end$" {
		if @stop {} else {
			(add, loop_end_result, @pos, 1) > <math@std.com>;
		};
	}
	"^loop_end_result$" {
		pos = @content;
		loop_begin > @self;
	}
};

(input,
"++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>."
) > <parser@bf>;
"start" > <parser@bf>;
